{"version":3,"sources":["reportWebVitals.js","app/utils/validator.js","app/api/fake.api/professions.api.js","app/api/fake.api/user.api.js","app/api/fake.api/qualities.api.js","app/api/fake.api/comments.api.js","app/api/index.js","app/components/common/form/textField.jsx","app/components/common/form/selectField.jsx","app/components/common/form/radio.Field.jsx","app/components/common/form/multiSelectField.jsx","app/components/common/backButton.jsx","app/components/page/editUserPage/index.js","app/components/page/editUserPage/editUserPage.jsx","app/components/ui/userCard.jsx","app/components/ui/qualities/quality.jsx","app/components/ui/qualities/index.js","app/components/ui/qualities/qualitiesList.jsx","app/components/ui/qualitiesCard.jsx","app/components/ui/meetingsCard.jsx","app/utils/displayDate.js","app/components/common/comments/comment.jsx","app/components/common/comments/commentsList.jsx","app/components/common/form/textAreaField.jsx","app/components/common/comments/addCommentForm.jsx","app/components/common/comments/index.js","app/components/ui/comments.jsx","app/components/page/userPage/index.js","app/components/page/userPage/userPage.jsx","app/components/common/pagination.jsx","app/components/common/groupList.jsx","app/components/ui/searchStatus.jsx","app/components/common/bookmark.jsx","app/components/common/table/tableBody.jsx","app/components/common/table/tableHeader.jsx","app/components/common/table/index.js","app/components/common/table/table.jsx","app/components/ui/usersTable.jsx","app/components/page/usersListPage/index.js","app/components/page/usersListPage/usersListPage.jsx","app/utils/paginate.js","app/layouts/users.jsx","app/components/common/form/checkBoxField.jsx","app/components/ui/loginForm.jsx","app/components/ui/registerForm.jsx","app/layouts/login.jsx","app/layouts/main.jsx","app/components/ui/navBar.jsx","app/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","validator","data","config","errors","validate","validateMethod","statusValidate","trim","test","length","value","message","fieldName","error","professionsObject","doctor","_id","name","waiter","physics","engineer","actor","cook","fetchAll","Promise","resolve","window","setTimeout","qualities","tedious","color","strange","buller","alcoholic","handsome","uncertain","users","email","sex","profession","professions","completedMeetings","rate","bookmark","localStorage","getItem","setItem","JSON","stringify","parse","getById","id","find","user","update","userIndex","findIndex","u","comments","userId","pageId","content","created_at","API","fetchCommentsForUser","filter","c","add","newComment","Date","now","Math","random","toString","substr","push","remove","newComments","x","console","log","TextField","label","type","onChange","useState","showPassword","setShowPassword","className","htmlFor","target","onClick","prevState","defaultProps","SelectField","defaultOption","options","optionsArray","Array","isArray","Object","keys","map","optionName","disabled","option","RadioField","handleChange","checked","MultiSelectField","defaultValueToArray","defaultValue","isMulti","closeMenuOnSelect","classNamePrefix","BackHistoryButton","history","useHistory","goBack","EditUserPage","useParams","isLoading","setIsLoading","password","setData","setProfession","setQualities","setErrors","getProfessionById","prof","profData","getQualities","elements","qualitiesQrray","elem","qualy","useEffect","api","validatorConfog","isRequired","isEmail","isValid","onSubmit","e","preventDefault","values","UserCard","location","pathname","src","substring","width","role","Quality","Qualities","qual","QualitiesCard","MeetingsCard","displayDate","date","parseInt","dateNow","getFullYear","getDay","getHours","minutesDif","getMinutes","toLocaleString","month","getMonth","getDate","Comment","created","onRemove","setUser","alt","height","CommentsList","comment","TextAreaField","initialData","AddCommentForm","setUsers","arrayOfUsers","Comments","setComments","sortedComments","orderBy","UserPage","Pagination","itemsCount","pageSize","onPageChange","currentPage","pagesCount","ceil","pages","_","range","page","GroupList","items","valueProperty","contentProperty","onItemSelect","selectedItem","item","SearchStatus","number","lastOne","Number","slice","indexOf","renderPhrase","BookMark","status","rest","TableBody","columns","renderContent","column","component","get","path","TableHeader","onSort","selectedSort","rendeSortArrow","currentPath","order","undefined","scope","Table","children","UserTable","onToggleBookMark","onDelete","to","delete","UsersListPage","setCurrentPage","searchQuery","setSearchQuery","selectedProf","setSelectedProf","sortBy","setSortBy","filteredUsers","toLowerCase","count","usersCrop","pageNumber","startIndex","take","paginate","placeholder","newArray","pageIndex","Users","params","edit","CheckBoxField","LoginForm","stayOn","isCapitalSymbol","isContainDigit","min","RegisterForm","licence","Login","formType","setFormType","toggleFormType","Main","NavBar","aria-current","App","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.581d71d2.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","export function validator(data, config) {\n    const errors = {};\n    function validate(validateMethod, data, config) {\n        let statusValidate;\n        switch (validateMethod) {\n            case \"isRequired\": {\n                if (typeof data === \"boolean\") {\n                    statusValidate = !data;\n                } else {\n                    statusValidate = data.trim() === \"\";\n                }\n                break;\n            }\n            case \"isEmail\": {\n                const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\n                statusValidate = !emailRegExp.test(data);\n                break;\n            }\n            case \"isCapitalSymbol\": {\n                const capitalRegExp = /[A-Z]+/g;\n                statusValidate = !capitalRegExp.test(data);\n                break;\n            }\n            case \"isContainDigit\": {\n                const digitRegExp = /\\d+/g;\n                statusValidate = !digitRegExp.test(data);\n                break;\n            }\n            case \"min\": {\n                statusValidate = data.length < config.value;\n                break;\n            }\n            default:\n                break;\n        }\n        if (statusValidate) return config.message;\n    }\n    for (const fieldName in data) {\n        for (const validateMethod in config[fieldName]) {\n            const error = validate(\n                validateMethod,\n                data[fieldName],\n                config[fieldName][validateMethod]\n            );\n            if (error && !errors[fieldName]) {\n                errors[fieldName] = error;\n            }\n        }\n    }\n    return errors;\n}\n","export const professionsObject = {\n    doctor: { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\n    waiter: { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\n    physics: { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\n    engineer: { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\n    actor: { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\n    cook: { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" }\n};\nexport const professions = [\n    { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\n    { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\n    { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\n    { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\n    { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\n    { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" }\n];\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(professionsObject);\n        }, 2000);\n    });\n\nexport default {\n    fetchAll\n};\n","import { professionsObject as professions } from \"./professions.api\";\nconst qualities = {\n    tedious: {\n        _id: \"67rdca3eeb7f6fgeed471198\",\n        name: \"Нудила\",\n        color: \"primary\"\n    },\n    strange: {\n        _id: \"67rdca3eeb7f6fgeed471100\",\n        name: \"Странный\",\n        color: \"secondary\"\n    },\n    buller: {\n        _id: \"67rdca3eeb7f6fgeed4711012\",\n        name: \"Троль\",\n        color: \"success\"\n    },\n    alcoholic: {\n        _id: \"67rdca3eeb7f6fgeed471101\",\n        name: \"Алкоголик\",\n        color: \"danger\"\n    },\n    handsome: {\n        _id: \"67rdca3eeb7f6fgeed471102\",\n        name: \"Красавчик\",\n        color: \"info\"\n    },\n    uncertain: {\n        _id: \"67rdca3eeb7f6fgeed471103\",\n        name: \"Неуверенный\",\n        color: \"dark\"\n    }\n};\n\nconst users = [\n    {\n        _id: \"67rdca3eeb7f6fgeed471815\",\n        name: \"Джон Дориан\",\n        email: \"johndorian@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.doctor,\n        qualities: [qualities.tedious, qualities.uncertain, qualities.strange],\n        completedMeetings: 36,\n        rate: 2.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471816\",\n        name: \"Кокс\",\n        email: \"koks@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.doctor,\n        qualities: [qualities.buller, qualities.handsome, qualities.alcoholic],\n        completedMeetings: 15,\n        rate: 2.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471817\",\n        name: \"Боб Келсо\",\n        email: \"bobkelso@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.doctor,\n        qualities: [qualities.buller],\n        completedMeetings: 247,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471818\",\n        name: \"Рэйчел Грин\",\n        email: \"rachelgreene@fastcompany.ru\",\n        sex: \"female\",\n        profession: professions.waiter,\n        qualities: [qualities.uncertain],\n        completedMeetings: 148,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471819\",\n        name: \"Шелдон Купер\",\n        email: \"sheldoncooper@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.physics,\n        qualities: [qualities.strange, qualities.tedious],\n        completedMeetings: 37,\n        rate: 4.6,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471820\",\n        name: \"Леонард Хофстедтер\",\n        email: \"leonardhofstedter@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.physics,\n        qualities: [qualities.strange, qualities.uncertain],\n        completedMeetings: 147,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471821\",\n        name: \"Говард Воловиц\",\n        email: \"howardwolowitz@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.engineer,\n        qualities: [qualities.strange, qualities.tedious],\n        completedMeetings: 72,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471822\",\n        name: \"Никола Тесла\",\n        email: \"nikolatesla@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.engineer,\n        qualities: [qualities.handsome],\n        completedMeetings: 72,\n        rate: 5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471823\",\n        name: \"Моника Геллер\",\n        email: \"monicageller@fastcompany.ru\",\n        sex: \"female\",\n        profession: professions.cook,\n        qualities: [qualities.strange, qualities.uncertain],\n        completedMeetings: 17,\n        rate: 4.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471824\",\n        name: \"Рататуй\",\n        email: \"ratatouille@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.cook,\n        qualities: [qualities.handsome, qualities.buller],\n        completedMeetings: 17,\n        rate: 4.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed47181f\",\n        name: \"Джоуи Триббиани\",\n        email: \"joeytribbiani@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.actor,\n        qualities: [qualities.uncertain, qualities.strange],\n        completedMeetings: 434,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed47181r\",\n        name: \"Брэд Питт\",\n        email: \"bradpitt@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.actor,\n        qualities: [qualities.handsome],\n        completedMeetings: 434,\n        rate: 5,\n        bookmark: false\n    }\n];\nif (!localStorage.getItem(\"users\")) {\n    localStorage.setItem(\"users\", JSON.stringify(users));\n}\n\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(JSON.parse(localStorage.getItem(\"users\")));\n        }, 2000);\n    });\nconst update = (id, data) =>\n    new Promise((resolve) => {\n        const users = JSON.parse(localStorage.getItem(\"users\"));\n        const userIndex = users.findIndex((u) => u._id === id);\n        users[userIndex] = { ...users[userIndex], ...data };\n        localStorage.setItem(\"users\", JSON.stringify(users));\n        resolve(users[userIndex]);\n    });\n\nconst getById = (id) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(\n                JSON.parse(localStorage.getItem(\"users\")).find(\n                    (user) => user._id === id\n                )\n            );\n        }, 1000);\n    });\nexport default {\n    fetchAll,\n    getById,\n    update\n};\n","const qualities = {\n    tedious: {\n        _id: \"67rdca3eeb7f6fgeed471198\",\n        name: \"Нудила\",\n        color: \"primary\"\n    },\n    strange: {\n        _id: \"67rdca3eeb7f6fgeed471100\",\n        name: \"Странный\",\n        color: \"secondary\"\n    },\n    buller: {\n        _id: \"67rdca3eeb7f6fgeed4711012\",\n        name: \"Троль\",\n        color: \"success\"\n    },\n    alcoholic: {\n        _id: \"67rdca3eeb7f6fgeed471101\",\n        name: \"Алкоголик\",\n        color: \"danger\"\n    },\n    handsome: {\n        _id: \"67rdca3eeb7f6fgeed471102\",\n        name: \"Красавчик\",\n        color: \"info\"\n    },\n    uncertain: {\n        _id: \"67rdca3eeb7f6fgeed471103\",\n        name: \"Неуверенный\",\n        color: \"dark\"\n    }\n};\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(qualities);\n        }, 2000);\n    });\n\nexport default {\n    fetchAll\n};\n","const comments = [\n    {\n        _id: \"67rdca3eeb7f6fg\",\n        userId: \"67rdca3eeb7f6fgeed471815\",\n        pageId: \"67rdca3eeb7f6fgeed471815\",\n        content: \"Lorem ipsum dolor\",\n        created_at: \"1633576399367\"\n    },\n    {\n        _id: \"67rdca3eeb7f6fgdasd\",\n        pageId: \"67rdca3eeb7f6fgeed471815\",\n        userId: \"67rdca3eeb7f6fgeed471815\",\n        content: \"Lorem ipsum dolor and etc\",\n        created_at: \"1633573058520\"\n    },\n    {\n        _id: \"67rdca3eeb7f6fgdaasd\",\n        pageId: \"67rdca3eeb7f6fgeed471817\",\n        userId: \"67rdca3eeb7f6fgeed471815\",\n        content: \"Lorem ipsum dolor and etc\",\n        created_at: \"1633573058520\"\n    }\n];\nif (!localStorage.getItem(\"comments\")) {\n    localStorage.setItem(\"comments\", JSON.stringify(comments));\n}\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(comments);\n        }, 200);\n    });\n\nconst fetchCommentsForUser = (userId) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(\n                JSON.parse(localStorage.getItem(\"comments\")).filter(\n                    (c) => c.pageId === userId\n                )\n            );\n        }, 200);\n    });\nconst add = (data) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            const comments = JSON.parse(localStorage.getItem(\"comments\"));\n            const newComment = {\n                ...data,\n                created_at: Date.now(),\n                _id: Math.random().toString(36).substr(2, 9)\n            };\n            comments.push(newComment);\n            localStorage.setItem(\"comments\", JSON.stringify(comments));\n            resolve(newComment);\n        }, 200);\n    });\n\nconst remove = (id) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            const comments = JSON.parse(localStorage.getItem(\"comments\"));\n            const newComments = comments.filter((x) => x._id !== id);\n            console.log(id);\n            console.log(newComments);\n            localStorage.setItem(\"comments\", JSON.stringify(newComments));\n            resolve(id);\n        }, 200);\n    });\nexport default {\n    fetchAll,\n    fetchCommentsForUser,\n    add,\n    remove\n};\n","import users from \"./fake.api/user.api\";\nimport professions from \"./fake.api/professions.api\";\nimport qualities from \"./fake.api/qualities.api\";\nimport comments from \"./fake.api/comments.api\";\nconst API = {\n    users,\n    professions,\n    qualities,\n    comments\n};\nexport default API;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextField = ({ label, type, name, value, onChange, error }) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\n    };\n    const toggleShowPassword = () => {\n        setShowPassword((prevState) => !prevState);\n    };\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name}> {label}</label>\n            <div className=\"input-group has-validation\">\n                <input\n                    type={showPassword ? \"text\" : type}\n                    id={name}\n                    name={name}\n                    value={value}\n                    onChange={handleChange}\n                    className={getInputClasses()}\n                />\n\n                {type === \"password\" && (\n                    <button\n                        className=\"btn btn-outline-secondary\"\n                        type=\"button\"\n                        onClick={toggleShowPassword}\n                    >\n                        <i\n                            className={\n                                \"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")\n                            }\n                        ></i>\n                    </button>\n                )}\n                {error && <div className=\"invalid-feedback \">{error}</div>}\n            </div>\n        </div>\n    );\n};\nTextField.defaultProps = {\n    type: \"text\"\n};\nTextField.propTypes = {\n    label: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string\n};\n\nexport default TextField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SelectField = ({\n    label,\n    value,\n    onChange,\n    defaultOption,\n    options,\n    error,\n    name\n}) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-select\" + (error ? \" is-invalid\" : \"\");\n    };\n\n    const optionsArray =\n        !Array.isArray(options) && typeof options === \"object\"\n            ? Object.keys(options).map((optionName) => ({\n                  name: options[optionName].name,\n                  value: options[optionName]._id\n              }))\n            : options;\n\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor=\"validationCustom04\" className=\"form-label\">\n                {label}\n            </label>\n            <select\n                className={getInputClasses()}\n                id=\"validationCustom04\"\n                name={name}\n                value={value}\n                onChange={handleChange}\n            >\n                <option disabled value=\"\">\n                    {defaultOption}\n                </option>\n                {optionsArray &&\n                    optionsArray.map((option) => (\n                        <option value={option.value} key={option.value}>\n                            {option.name}\n                        </option>\n                    ))}\n            </select>\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\nSelectField.propTypes = {\n    defaultOption: PropTypes.string,\n    label: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string,\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    name: PropTypes.string\n};\n\nexport default SelectField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst RadioField = ({ options, name, onChange, value, label }) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    return (\n        <div className=\"mb-4\">\n            <label className=\"form-label\">{label}</label>\n            <div>\n                {options.map((option) => (\n                    <div\n                        key={option.name + \"_\" + option.value}\n                        className=\"form-check form-check-inline\"\n                    >\n                        <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name={name}\n                            id={option.name + \"_\" + option.value}\n                            checked={option.value === value}\n                            value={option.value}\n                            onChange={handleChange}\n                        />\n                        <label\n                            className=\"form-check-label\"\n                            htmlFor={option.name + \"_\" + option.value}\n                        >\n                            {option.name}\n                        </label>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nRadioField.propTypes = {\n    options: PropTypes.array,\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.string,\n    label: PropTypes.string\n};\n\nexport default RadioField;\n","import React from \"react\";\nimport Select from \"react-select\";\nimport PropTypes from \"prop-types\";\n\nconst MultiSelectField = ({ options, onChange, name, label, defaultValue }) => {\n    const defaultValueToArray = defaultValue.map((value) => ({\n        label: value.name,\n        value: value._id\n    }));\n    const optionsArray =\n        !Array.isArray(options) && typeof options === \"object\"\n            ? Object.keys(options).map((optionName) => ({\n                  label: options[optionName].name,\n                  value: options[optionName]._id\n              }))\n            : options;\n\n    const handleChange = (value) => {\n        onChange({ name: name, value });\n    };\n    return (\n        <div className=\"mb-4\">\n            <label className=\"form-label\">{label}</label>\n            <Select\n                isMulti\n                defaultValue={defaultValueToArray}\n                closeMenuOnSelect={false}\n                options={optionsArray}\n                className=\"basic-multi-select\"\n                classNamePrefix=\"select\"\n                onChange={handleChange}\n                name={name}\n            />\n        </div>\n    );\n};\nMultiSelectField.propTypes = {\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n    label: PropTypes.string,\n    defaultValue: PropTypes.array\n};\n\nexport default MultiSelectField;\n","import React from \"react\";\nimport { useHistory } from \"react-router\";\nconst BackHistoryButton = () => {\n    const history = useHistory();\n    return (\n        <button className=\"btn btn-primary\" onClick={() => history.goBack()}>\n            <i className=\"bi bi-caret-left\"></i>\n            Назад\n        </button>\n    );\n};\n\nexport default BackHistoryButton;\n","import EditUserPage from \"./editUserPage\";\nexport default EditUserPage;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { validator } from \"../../../utils/validator\";\nimport api from \"../../../api\";\nimport TextField from \"../../common/form/textField\";\nimport SelectField from \"../../common/form/selectField\";\nimport RadioField from \"../../common/form/radio.Field\";\nimport MultiSelectField from \"../../common/form/multiSelectField\";\nimport BackHistoryButton from \"../../common/backButton\";\n\nconst EditUserPage = () => {\n    const { userId } = useParams();\n    const history = useHistory();\n    const [isLoading, setIsLoading] = useState(false);\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        profession: \"\",\n        sex: \"male\",\n        qualities: []\n    });\n    const [professions, setProfession] = useState([]);\n    const [qualities, setQualities] = useState({});\n    const [errors, setErrors] = useState({});\n    const getProfessionById = (id) => {\n        for (const prof in professions) {\n            const profData = professions[prof];\n            if (profData._id === id) return profData;\n        }\n    };\n    const getQualities = (elements) => {\n        const qualitiesQrray = [];\n        for (const elem of elements) {\n            for (const qualy in qualities) {\n                if (elem.value === qualities[qualy]._id) {\n                    qualitiesQrray.push(qualities[qualy]);\n                }\n            }\n        }\n        return qualitiesQrray;\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        const { profession, qualities } = data;\n        api.users\n            .update(userId, {\n                ...data,\n                profession: getProfessionById(profession),\n                qualities: getQualities(qualities)\n            })\n            .then((data) => history.push(`/users/${data._id}`));\n        console.log(data);\n    };\n    useEffect(() => {\n        setIsLoading(true);\n        api.users.getById(userId).then(({ profession, ...data }) =>\n            setData((prevState) => ({\n                ...prevState,\n                ...data,\n                profession: profession._id\n            }))\n        );\n        api.qualities.fetchAll().then((data) => setQualities(data));\n        api.professions.fetchAll().then((data) => setProfession(data));\n    }, []);\n    useEffect(() => {\n        if (data._id) setIsLoading(false);\n    }, [data]);\n\n    const validatorConfog = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n\n        name: {\n            isRequired: {\n                message: \"Введите ваше имя\"\n            }\n        }\n    };\n    useEffect(() => validate(), [data]);\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validate = () => {\n        const errors = validator(data, validatorConfog);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n    return (\n        <div className=\"container mt-5\">\n            <BackHistoryButton />\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\n                    {!isLoading && Object.keys(professions).length > 0 ? (\n                        <form onSubmit={handleSubmit}>\n                            <TextField\n                                label=\"Имя\"\n                                name=\"name\"\n                                value={data.name}\n                                onChange={handleChange}\n                                error={errors.name}\n                            />\n                            <TextField\n                                label=\"Электронная почта\"\n                                name=\"email\"\n                                value={data.email}\n                                onChange={handleChange}\n                                error={errors.email}\n                            />\n                            <SelectField\n                                label=\"Выбери свою профессию\"\n                                defaultOption=\"Choose...\"\n                                options={professions}\n                                onChange={handleChange}\n                                value={data.profession}\n                                error={errors.profession}\n                            />\n                            <RadioField\n                                options={[\n                                    { name: \"Male\", value: \"male\" },\n                                    { name: \"Female\", value: \"female\" },\n                                    { name: \"Other\", value: \"other\" }\n                                ]}\n                                value={data.sex}\n                                name=\"sex\"\n                                onChange={handleChange}\n                                label=\"Выберите ваш пол\"\n                            />\n                            <MultiSelectField\n                                defaultValue={data.qualities}\n                                options={qualities}\n                                onChange={handleChange}\n                                values\n                                name=\"qualities\"\n                                label=\"Выберите ваши качесвта\"\n                            />\n                            <button\n                                type=\"submit\"\n                                disabled={!isValid}\n                                className=\"btn btn-primary w-100 mx-auto\"\n                            >\n                                Обновить\n                            </button>\n                        </form>\n                    ) : (\n                        \"Loading...\"\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default EditUserPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useHistory } from \"react-router\";\nconst UserCard = ({ user }) => {\n    const history = useHistory();\n    const handleClick = () => {\n        history.push(history.location.pathname + \"/edit\");\n    };\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-body\">\n                <button\n                    className=\"position-absolute top-0 end-0 btn btn-light btn-sm\"\n                    onClick={handleClick}\n                >\n                    <i className=\"bi bi-gear\"></i>\n                </button>\n                <div className=\"d-flex flex-column align-items-center text-center position-relative\">\n                    <img\n                        src={`https://avatars.dicebear.com/api/avataaars/${(\n                            Math.random() + 1\n                        )\n                            .toString(36)\n                            .substring(7)}.svg`}\n                        className=\"rounded-circle\"\n                        width=\"150\"\n                    />\n                    <div className=\"mt-3\">\n                        <h4>{user.name}</h4>\n                        <p className=\"text-secondary mb-1\">\n                            {user.profession.name}\n                        </p>\n                        <div className=\"text-muted\">\n                            <i\n                                className=\"bi bi-caret-down-fill text-primary\"\n                                role=\"button\"\n                            ></i>\n                            <i\n                                className=\"bi bi-caret-up text-secondary\"\n                                role=\"button\"\n                            ></i>\n                            <span className=\"ms-2\">{user.rate}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\nUserCard.propTypes = {\n    user: PropTypes.object\n};\n\nexport default UserCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst Quality = ({ color, name, _id }) => {\n    return (\n        <span className={\"badge m-1 bg-\" + color} key={_id}>\n            {name}\n        </span>\n    );\n};\nQuality.propTypes = {\n    color: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    _id: PropTypes.string.isRequired\n};\n\nexport default Quality;\n","import Qualities from \"./qualitiesList\";\nexport default Qualities;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Quality from \"./quality\";\n\nconst QualitiesList = ({ qualities }) => {\n    return (\n        <>\n            {qualities.map((qual) => (\n                <Quality key={qual._id} {...qual} />\n            ))}\n        </>\n    );\n};\n\nQualitiesList.propTypes = {\n    qualities: PropTypes.array\n};\n\nexport default QualitiesList;\n","import React from \"react\";\nimport Qualities from \"./qualities\";\nimport PropTypes from \"prop-types\";\n\nconst QualitiesCard = ({ data }) => {\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-body d-flex flex-column justify-content-center text-center\">\n                <h5 className=\"card-title\">\n                    <span>Qualities</span>\n                </h5>\n                <p className=\"card-text\">\n                    <Qualities qualities={data} />\n                </p>\n            </div>\n        </div>\n    );\n};\nQualitiesCard.propTypes = {\n    data: PropTypes.array\n};\n\nexport default QualitiesCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst MeetingsCard = ({ value }) => {\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-body d-flex flex-column justify-content-center text-center\">\n                <h5 className=\"card-title\">\n                    <span>Completed meetings</span>\n                </h5>\n\n                <h1 className=\"display-1\">{value}</h1>\n            </div>\n        </div>\n    );\n};\nMeetingsCard.propTypes = {\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};\n\nexport default MeetingsCard;\n","export function displayDate(data) {\n    const date = new Date(parseInt(data));\n    const dateNow = new Date();\n    const yearDif = dateNow.getFullYear() - date.getFullYear();\n    if (yearDif === 0) {\n        const dayDif = dateNow.getDay() - date.getDay();\n        if (dayDif === 0) {\n            const hourDif = dateNow.getHours() - date.getHours();\n            if (hourDif === 0) {\n                const minutesDif = dateNow.getMinutes() - date.getMinutes();\n\n                if (minutesDif >= 0 && minutesDif < 5) return \"1 минуту назад\";\n                if (minutesDif >= 5 && minutesDif < 10) return \"5 минут назад\";\n                if (minutesDif >= 10 && minutesDif < 30) {\n                    return \"10 минут назад\";\n                }\n                return \"30 минут назад\";\n            }\n            return `${date.getHours()}:${date.getMinutes()}`;\n        }\n\n        return `${date.getDay()} ${date.toLocaleString(\"default\", {\n            month: \"long\"\n        })}`;\n    }\n    return (\n        date.getFullYear() + \".\" + (date.getMonth() + 1) + \"_\" + date.getDate()\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { displayDate } from \"../../../utils/displayDate\";\nimport API from \"../../../api\";\nconst Comment = ({\n    content,\n    created_at: created,\n    _id: id,\n    userId,\n    onRemove\n}) => {\n    const [user, setUser] = useState();\n    const [isLoading, setIsLoading] = useState(false);\n    useEffect(() => {\n        setIsLoading(true);\n        API.users.getById(userId).then((data) => {\n            setUser(data);\n            setIsLoading(false);\n        });\n    }, []);\n\n    return (\n        <div className=\"bg-light card-body  mb-3\">\n            <div className=\"row\">\n                {isLoading ? (\n                    \"Loading ...\"\n                ) : (\n                    <div className=\"col\">\n                        <div className=\"d-flex flex-start \">\n                            <img\n                                src={`https://avatars.dicebear.com/api/avataaars/${(\n                                    Math.random() + 1\n                                )\n                                    .toString(36)\n                                    .substring(7)}.svg`}\n                                className=\"rounded-circle shadow-1-strong me-3\"\n                                alt=\"avatar\"\n                                width=\"65\"\n                                height=\"65\"\n                            />\n                            <div className=\"flex-grow-1 flex-shrink-1\">\n                                <div className=\"mb-4\">\n                                    <div className=\"d-flex justify-content-between align-items-center\">\n                                        <p className=\"mb-1 \">\n                                            {user && user.name}{\" \"}\n                                            <span className=\"small\">\n                                                - {displayDate(created)}\n                                            </span>\n                                        </p>\n                                        <button\n                                            className=\"btn btn-sm text-primary d-flex align-items-center\"\n                                            onClick={() => onRemove(id)}\n                                        >\n                                            <i className=\"bi bi-x-lg\"></i>\n                                        </button>\n                                    </div>\n                                    <p className=\"small mb-0\">{content}</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\nComment.propTypes = {\n    content: PropTypes.string,\n    edited_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    created_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    userId: PropTypes.string,\n    onRemove: PropTypes.func,\n    _id: PropTypes.string\n};\n\nexport default Comment;\n","import React from \"react\";\n\nimport Comment from \"./comment\";\nimport PropTypes from \"prop-types\";\nconst CommentsList = ({ comments, onRemove }) => {\n    return comments.map((comment) => (\n        <Comment key={comment._id} {...comment} onRemove={onRemove} />\n    ));\n};\nCommentsList.propTypes = {\n    comment: PropTypes.array,\n    onRemove: PropTypes.func\n};\n\nexport default CommentsList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextAreaField = ({ label, name, value, onChange, error }) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\n    };\n\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name}> {label}</label>\n            <div className=\"input-group has-validation\">\n                <textarea\n                    id={name}\n                    name={name}\n                    value={value}\n                    onChange={handleChange}\n                    className={getInputClasses()}\n                />\n\n                {error && <div className=\"invalid-feedback \">{error}</div>}\n            </div>\n        </div>\n    );\n};\nTextAreaField.defaultProps = {\n    type: \"text\"\n};\nTextAreaField.propTypes = {\n    label: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string\n};\n\nexport default TextAreaField;\n","import React, { useEffect, useState } from \"react\";\nimport API from \"../../../api\";\nimport SelectField from \"../form/selectField\";\nimport TextAreaField from \"../form/textAreaField\";\nimport { validator } from \"../../../utils/validator\";\nimport PropTypes from \"prop-types\";\nconst initialData = { userId: \"\", content: \"\" };\n\nconst AddCommentForm = ({ onSubmit }) => {\n    const [data, setData] = useState(initialData);\n    const [users, setUsers] = useState({});\n    const [errors, setErrors] = useState({});\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfog = {\n        userId: {\n            isRequired: {\n                message: \"Выберите от чьего имени вы хотите отправить сообщение\"\n            }\n        },\n        content: {\n            isRequired: {\n                message: \"Сообщение не может быть пустым\"\n            }\n        }\n    };\n\n    const validate = () => {\n        const errors = validator(data, validatorConfog);\n\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    useEffect(() => {\n        API.users.fetchAll().then(setUsers);\n    }, []);\n    const clearForm = () => {\n        setData(initialData);\n        setErrors({});\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        onSubmit(data);\n        clearForm();\n    };\n    const arrayOfUsers =\n        users &&\n        Object.keys(users).map((userId) => ({\n            name: users[userId].name,\n            value: users[userId]._id\n        }));\n    return (\n        <div>\n            <h2>New comment</h2>\n            <form onSubmit={handleSubmit}>\n                <SelectField\n                    onChange={handleChange}\n                    options={arrayOfUsers}\n                    name=\"userId\"\n                    value={data.userId}\n                    defaultOption=\"Выберите пользователя\"\n                    error={errors.userId}\n                />\n                <TextAreaField\n                    value={data.content}\n                    onChange={handleChange}\n                    name=\"content\"\n                    label=\"Сообщение\"\n                    error={errors.content}\n                />\n                <div className=\"d-flex justify-content-end\">\n                    <button className=\"btn btn-primary\">Опубликовать</button>\n                </div>\n            </form>\n        </div>\n    );\n};\nAddCommentForm.propTypes = {\n    onSubmit: PropTypes.func\n};\n\nexport default AddCommentForm;\n","import CommentsList from \"./commentsList\";\nimport AddCommentForm from \"./addCommentForm\";\nexport default CommentsList;\nexport { AddCommentForm };\n","import { orderBy } from \"lodash\";\nimport React, { useEffect, useState } from \"react\";\nimport api from \"../../api\";\nimport { useParams } from \"react-router\";\nimport CommentsList, { AddCommentForm } from \"../common/comments\";\n\nconst Comments = () => {\n    const { userId } = useParams();\n    const [comments, setComments] = useState([]);\n    useEffect(() => {\n        api.comments\n            .fetchCommentsForUser(userId)\n            .then((data) => setComments(data));\n    }, []);\n    const handleSubmit = (data) => {\n        api.comments\n            .add({ ...data, pageId: userId })\n            .then((data) => setComments([...comments, data]));\n    };\n    const handleRemoveComment = (id) => {\n        api.comments.remove(id).then((id) => {\n            setComments(comments.filter((x) => x._id !== id));\n        });\n    };\n    const sortedComments = orderBy(comments, [\"created_at\"], [\"desc\"]);\n    return (\n        <>\n            <div className=\"card mb-2\">\n                {\" \"}\n                <div className=\"card-body \">\n                    <AddCommentForm onSubmit={handleSubmit} />\n                </div>\n            </div>\n            {sortedComments.length > 0 && (\n                <div className=\"card mb-3\">\n                    <div className=\"card-body \">\n                        <h2>Comments</h2>\n                        <hr />\n                        <CommentsList\n                            comments={sortedComments}\n                            onRemove={handleRemoveComment}\n                        />\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default Comments;\n","import UserPage from \"./userPage\";\nexport default UserPage;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport api from \"../../../api\";\nimport UserCard from \"../../ui/userCard\";\nimport QualitiesCard from \"../../ui/qualitiesCard\";\nimport MeetingsCard from \"../../ui/meetingsCard\";\nimport Comments from \"../../ui/comments\";\n\nconst UserPage = ({ userId }) => {\n    const [user, setUser] = useState();\n\n    useEffect(() => {\n        api.users.getById(userId).then((data) => setUser(data));\n    }, []);\n    if (user) {\n        return (\n            <div className=\"container\">\n                <div className=\"row gutters-sm\">\n                    <div className=\"col-md-4 mb-3\">\n                        <UserCard user={user} />\n                        <QualitiesCard data={user.qualities} />\n                        <MeetingsCard value={user.completedMeetings} />\n                    </div>\n                    <div className=\"col-md-8\">\n                        <Comments />\n                    </div>\n                </div>\n            </div>\n        );\n    } else {\n        return <h1>Loading</h1>;\n    }\n};\n\nUserPage.propTypes = {\n    userId: PropTypes.string.isRequired\n};\n\nexport default UserPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\n    const pagesCount = Math.ceil(itemsCount / pageSize);\n    const pages = _.range(1, pagesCount + 1);\n\n    if (pagesCount === 1) return null;\n    return (\n        <nav>\n            <ul className=\"pagination\">\n                {pages.map((page) => (\n                    <li\n                        key={page}\n                        className={\n                            \"page-item \" +\n                            (page === currentPage ? \"active\" : \"\")\n                        }\n                    >\n                        <a\n                            className=\"page-link\"\n                            onClick={() => {\n                                onPageChange(page);\n                            }}\n                        >\n                            {page}\n                        </a>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    );\n};\nPagination.propTypes = {\n    itemsCount: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired,\n    currentPage: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst GroupList = ({\n    items,\n    valueProperty,\n    contentProperty,\n    onItemSelect,\n    selectedItem\n}) => {\n    if (!Array.isArray(items)) {\n        return (\n            <ul className=\"list-group\">\n                {Object.keys(items).map((item) => (\n                    <li\n                        key={items[item][valueProperty]}\n                        className={\n                            \"list-group-item\" +\n                            (items[item] === selectedItem ? \" active\" : \"\")\n                        }\n                        onClick={() => onItemSelect(items[item])}\n                        role=\"button\"\n                    >\n                        {items[item][contentProperty]}\n                    </li>\n                ))}\n            </ul>\n        );\n    }\n    return (\n        <ul className=\"list-group\">\n            {items.map((item) => (\n                <li\n                    key={item[valueProperty]}\n                    className={\n                        \"list-group-item\" +\n                        (item === selectedItem ? \" active\" : \"\")\n                    }\n                    onClick={() => onItemSelect(item)}\n                    role=\"button\"\n                >\n                    {item[contentProperty]}\n                </li>\n            ))}\n        </ul>\n    );\n};\nGroupList.defaultProps = {\n    valueProperty: \"_id\",\n    contentProperty: \"name\"\n};\nGroupList.propTypes = {\n    items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    valueProperty: PropTypes.string.isRequired,\n    contentProperty: PropTypes.string.isRequired,\n    onItemSelect: PropTypes.func,\n    selectedItem: PropTypes.object\n};\n\nexport default GroupList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst SearchStatus = ({ length }) => {\n    const renderPhrase = (number) => {\n        const lastOne = Number(number.toString().slice(-1));\n        if (number > 4 && number < 15) {\n            return \"человек тусанет\";\n        }\n        if (lastOne === 1) return \"человек тусанет\";\n        if ([2, 3, 4].indexOf(lastOne) >= 0) return \"человека тусанут\";\n        return \"человек тусанет\";\n    };\n    return (\n        <h2>\n            <span\n                className={\"badge \" + (length > 0 ? \"bg-primary\" : \"bg-danger\")}\n            >\n                {length > 0\n                    ? `${length + \" \" + renderPhrase(length)}   с тобой сегодня`\n                    : \"Никто с тобой не тусанет\"}\n            </span>\n        </h2>\n    );\n};\nSearchStatus.propTypes = {\n    length: PropTypes.number\n};\n\nexport default SearchStatus;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst BookMark = ({ status, ...rest }) => {\n    return (\n        <button {...rest}>\n            <i className={\"bi bi-bookmark\" + (status ? \"-heart-fill\" : \"\")}></i>\n        </button>\n    );\n};\nBookMark.propTypes = {\n    status: PropTypes.bool\n};\n\nexport default BookMark;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst TableBody = ({ data, columns }) => {\n    const renderContent = (item, column) => {\n        if (columns[column].component) {\n            const component = columns[column].component;\n            if (typeof component === \"function\") {\n                return component(item);\n            }\n            return component;\n        }\n        return _.get(item, columns[column].path);\n    };\n    return (\n        <tbody>\n            {data.map((item) => (\n                <tr key={item._id}>\n                    {Object.keys(columns).map((column) => (\n                        <td key={column}>{renderContent(item, column)}</td>\n                    ))}\n                </tr>\n            ))}\n        </tbody>\n    );\n};\n\nTableBody.propTypes = {\n    data: PropTypes.array.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableBody;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\n    const handleSort = (item) => {\n        if (selectedSort.path === item) {\n            onSort({\n                ...selectedSort,\n                order: selectedSort.order === \"asc\" ? \"desc\" : \"asc\"\n            });\n        } else {\n            onSort({ path: item, order: \"asc\" });\n        }\n    };\n    const rendeSortArrow = (selectedSort, currentPath) => {\n        if (selectedSort.path === currentPath) {\n            if (selectedSort.order === \"asc\") {\n                return <i className=\"bi bi-caret-down-fill\"></i>;\n            } else {\n                return <i className=\"bi bi-caret-up-fill\"></i>;\n            }\n        }\n        return null;\n    };\n\n    return (\n        <thead>\n            <tr>\n                {Object.keys(columns).map((column) => (\n                    <th\n                        key={column}\n                        onClick={\n                            columns[column].path\n                                ? () => handleSort(columns[column].path)\n                                : undefined\n                        }\n                        {...{ role: columns[column].path && \"button\" }}\n                        scope=\"col\"\n                    >\n                        {columns[column].name}{\" \"}\n                        {rendeSortArrow(selectedSort, columns[column].path)}\n                    </th>\n                ))}\n            </tr>\n        </thead>\n    );\n};\nTableHeader.propTypes = {\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableHeader;\n","import Table from \"./table\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\n\nexport default Table;\n\nexport { TableBody, TableHeader };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\n\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\n    return (\n        <table className=\"table\">\n            {children || (\n                <>\n                    <TableHeader {...{ onSort, selectedSort, columns }} />\n                    <TableBody {...{ columns, data }} />\n                </>\n            )}\n        </table>\n    );\n};\nTable.propTypes = {\n    onSort: PropTypes.func,\n    selectedSort: PropTypes.object,\n    columns: PropTypes.object,\n    data: PropTypes.array,\n    children: PropTypes.array\n};\n\nexport default Table;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport BookMark from \"../common/bookmark\";\nimport Qualities from \"./qualities\";\nimport Table from \"../common/table\";\nimport { Link } from \"react-router-dom\";\n\nconst UserTable = ({\n    users,\n    onSort,\n    selectedSort,\n    onToggleBookMark,\n    onDelete,\n    ...rest\n}) => {\n    const columns = {\n        name: {\n            path: \"name\",\n            name: \"Имя\",\n            component: (user) => (\n                <Link to={`/users/${user._id}`}>{user.name}</Link>\n            )\n        },\n        qualities: {\n            name: \"Качества\",\n            component: (user) => <Qualities qualities={user.qualities} />\n        },\n        professions: { path: \"profession.name\", name: \"Профессия\" },\n        completedMeetings: {\n            path: \"completedMeetings\",\n            name: \"Встретился, раз\"\n        },\n        rate: { path: \"rate\", name: \"Оценка\" },\n        bookmark: {\n            path: \"bookmark\",\n            name: \"Избранное\",\n            component: (user) => (\n                <BookMark\n                    status={user.bookmark}\n                    onClick={() => onToggleBookMark(user._id)}\n                />\n            )\n        },\n        delete: {\n            component: (user) => (\n                <button\n                    onClick={() => onDelete(user._id)}\n                    className=\"btn btn-danger\"\n                >\n                    delete\n                </button>\n            )\n        }\n    };\n    return (\n        <Table\n            onSort={onSort}\n            selectedSort={selectedSort}\n            columns={columns}\n            data={users}\n        />\n    );\n};\n\nUserTable.propTypes = {\n    users: PropTypes.array.isRequired,\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    onToggleBookMark: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired\n};\n\nexport default UserTable;\n","import UsersListPage from \"./usersListPage\";\nexport default UsersListPage;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { paginate } from \"../../../utils/paginate\";\nimport Pagination from \"../../common/pagination\";\nimport api from \"../../../api\";\nimport GroupList from \"../../common/groupList\";\nimport SearchStatus from \"../../ui/searchStatus\";\nimport UserTable from \"../../ui/usersTable\";\nimport _ from \"lodash\";\nconst UsersListPage = () => {\n    const [currentPage, setCurrentPage] = useState(1);\n    const [professions, setProfession] = useState();\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [selectedProf, setSelectedProf] = useState();\n    const [sortBy, setSortBy] = useState({ path: \"name\", order: \"asc\" });\n    const pageSize = 8;\n\n    const [users, setUsers] = useState();\n    useEffect(() => {\n        api.users.fetchAll().then((data) => setUsers(data));\n    }, []);\n    const handleDelete = (userId) => {\n        setUsers(users.filter((user) => user._id !== userId));\n    };\n    const handleToggleBookMark = (id) => {\n        const newArray = users.map((user) => {\n            if (user._id === id) {\n                return { ...user, bookmark: !user.bookmark };\n            }\n            return user;\n        });\n        setUsers(newArray);\n    };\n\n    useEffect(() => {\n        api.professions.fetchAll().then((data) => setProfession(data));\n    }, []);\n\n    useEffect(() => {\n        setCurrentPage(1);\n    }, [selectedProf, searchQuery]);\n\n    const handleProfessionSelect = (item) => {\n        if (searchQuery !== \"\") setSearchQuery(\"\");\n        setSelectedProf(item);\n    };\n    const handleSearchQuery = ({ target }) => {\n        setSelectedProf(undefined);\n        setSearchQuery(target.value);\n    };\n\n    const handlePageChange = (pageIndex) => {\n        setCurrentPage(pageIndex);\n    };\n    const handleSort = (item) => {\n        setSortBy(item);\n    };\n\n    if (users) {\n        const filteredUsers = searchQuery\n            ? users.filter(\n                  (user) =>\n                      user.name\n                          .toLowerCase()\n                          .indexOf(searchQuery.toLowerCase()) !== -1\n              )\n            : selectedProf\n            ? users.filter(\n                  (user) =>\n                      JSON.stringify(user.profession) ===\n                      JSON.stringify(selectedProf)\n              )\n            : users;\n\n        const count = filteredUsers.length;\n        const sortedUsers = _.orderBy(\n            filteredUsers,\n            [sortBy.path],\n            [sortBy.order]\n        );\n        const usersCrop = paginate(sortedUsers, currentPage, pageSize);\n        const clearFilter = () => {\n            setSelectedProf();\n        };\n\n        return (\n            <div className=\"d-flex\">\n                {professions && (\n                    <div className=\"d-flex flex-column flex-shrink-0 p-3\">\n                        <GroupList\n                            selectedItem={selectedProf}\n                            items={professions}\n                            onItemSelect={handleProfessionSelect}\n                        />\n                        <button\n                            className=\"btn btn-secondary mt-2\"\n                            onClick={clearFilter}\n                        >\n                            Очиститть\n                        </button>\n                    </div>\n                )}\n                <div className=\"d-flex flex-column\">\n                    <SearchStatus length={count} />\n                    <input\n                        type=\"text\"\n                        name=\"searchQuery\"\n                        placeholder=\"Search...\"\n                        onChange={handleSearchQuery}\n                        value={searchQuery}\n                    />\n                    {count > 0 && (\n                        <UserTable\n                            users={usersCrop}\n                            onSort={handleSort}\n                            selectedSort={sortBy}\n                            onDelete={handleDelete}\n                            onToggleBookMark={handleToggleBookMark}\n                        />\n                    )}\n                    <div className=\"d-flex justify-content-center\">\n                        <Pagination\n                            itemsCount={count}\n                            pageSize={pageSize}\n                            currentPage={currentPage}\n                            onPageChange={handlePageChange}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    return \"loading...\";\n};\nUsersListPage.propTypes = {\n    users: PropTypes.array\n};\n\nexport default UsersListPage;\n","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n    const startIndex = (pageNumber - 1) * pageSize;\n    return _(items).slice(startIndex).take(pageSize).value();\n}\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport EditUserPage from \"../components/page/editUserPage\";\nimport UserPage from \"../components/page/userPage\";\nimport UsersListPage from \"../components/page/usersListPage\";\nconst Users = () => {\n    const params = useParams();\n    const { userId, edit } = params;\n    return (\n        <>\n            {userId ? (\n                edit ? (\n                    <EditUserPage />\n                ) : (\n                    <UserPage userId={userId} />\n                )\n            ) : (\n                <UsersListPage />\n            )}\n        </>\n    );\n};\n\nexport default Users;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst CheckBoxField = ({ name, value, onChange, children, error }) => {\n    const handleChange = () => {\n        onChange({ name: name, value: !value });\n    };\n    const getInputClasses = () => {\n        return \"form-check-input\" + (error ? \" is-invalid\" : \"\");\n    };\n    return (\n        <div className=\"form-check mb-4\">\n            <input\n                className={getInputClasses()}\n                type=\"checkbox\"\n                value=\"\"\n                id={name}\n                onChange={handleChange}\n                checked={value}\n            />\n            <label className=\"form-check-label \" htmlFor={name}>\n                {children}\n            </label>\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\nCheckBoxField.propTypes = {\n    name: PropTypes.string,\n    value: PropTypes.bool,\n    onChange: PropTypes.func,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]),\n    error: PropTypes.string\n};\n\nexport default CheckBoxField;\n","import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\n\nconst LoginForm = () => {\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        stayOn: false\n    });\n    const [errors, setErrors] = useState({});\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n\n    const validatorConfog = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязателкн для заполнения\"\n            },\n            isCapitalSymbol: {\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n            },\n            isContainDigit: {\n                message: \"Пароль должен содержать хотя бы одно число\"\n            },\n            min: {\n                message: \"Пароль должен состаять миниму из 8 символов\",\n                value: 8\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfog);\n\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        console.log(data);\n    };\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <CheckBoxField\n                value={data.stayOn}\n                onChange={handleChange}\n                name=\"stayOn\"\n            >\n                Оставаться в системе\n            </CheckBoxField>\n            <button\n                type=\"submit\"\n                disabled={!isValid}\n                className=\"btn btn-primary w-100 mx-auto\"\n            >\n                Submit\n            </button>\n        </form>\n    );\n};\n\nexport default LoginForm;\n","import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport api from \"../../api\";\nimport SelectField from \"../common/form/selectField\";\nimport RadioField from \"../common/form/radio.Field\";\nimport MultiSelectField from \"../common/form/multiSelectField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\n\nconst RegisterForm = () => {\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        profession: \"\",\n        sex: \"male\",\n        qualities: [],\n        licence: false\n    });\n    const [qualities, setQualities] = useState({});\n    const [professions, setProfession] = useState([]);\n    const [errors, setErrors] = useState({});\n    useEffect(() => {\n        api.professions.fetchAll().then((data) => setProfession(data));\n        api.qualities.fetchAll().then((data) => setQualities(data));\n    }, []);\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfog = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязательна для заполнения\"\n            },\n            isCapitalSymbol: {\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n            },\n            isContainDigit: {\n                message: \"Пароль должен содержать хотя бы одно число\"\n            },\n            min: {\n                message: \"Пароль должен состаять миниму из 8 символов\",\n                value: 8\n            }\n        },\n        profession: {\n            isRequired: {\n                message: \"Обязательно выберите вашу профессию\"\n            }\n        },\n        licence: {\n            isRequired: {\n                message:\n                    \"Вы не можете использовать наш сервис без подтреврждения лицензионного соглашения\"\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfog);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        console.log(data);\n    };\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <SelectField\n                label=\"Выбери свою профессию\"\n                name=\"profession\"\n                defaultOption=\"Choose...\"\n                options={professions}\n                onChange={handleChange}\n                value={data.profession}\n                error={errors.profession}\n            />\n            <RadioField\n                options={[\n                    { name: \"Male\", value: \"male\" },\n                    { name: \"Female\", value: \"female\" },\n                    { name: \"Other\", value: \"other\" }\n                ]}\n                value={data.sex}\n                name=\"sex\"\n                onChange={handleChange}\n                label=\"Выберите ваш пол\"\n            />\n            <MultiSelectField\n                defaultValue={data.qualities}\n                options={qualities}\n                onChange={handleChange}\n                name=\"qualities\"\n                label=\"Выберите ваши качесвта\"\n            />\n            <CheckBoxField\n                value={data.licence}\n                onChange={handleChange}\n                name=\"licence\"\n                error={errors.licence}\n            >\n                Подтвердить <a>лицензионное соглашение</a>\n            </CheckBoxField>\n            <button\n                type=\"submit\"\n                disabled={!isValid}\n                className=\"btn btn-primary w-100 mx-auto\"\n            >\n                Submit\n            </button>\n        </form>\n    );\n};\n\nexport default RegisterForm;\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport LoginForm from \"../components/ui/loginForm\";\nimport RegisterForm from \"../components/ui/registerForm\";\n\nconst Login = () => {\n    const { type } = useParams();\n    const [formType, setFormType] = useState(\n        type === \"register\" ? type : \"login\"\n    );\n    const toggleFormType = (params) => {\n        setFormType((prevState) =>\n            prevState === \"register\" ? \"login\" : \"register\"\n        );\n    };\n\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\n                    {formType === \"register\" ? (\n                        <>\n                            <h3 className=\"mb-4\">Register</h3>\n                            <RegisterForm />\n                            <p>\n                                Already have account?{\" \"}\n                                <a role=\"button\" onClick={toggleFormType}>\n                                    {\" \"}\n                                    Sign In\n                                </a>\n                            </p>\n                        </>\n                    ) : (\n                        <>\n                            <h3 className=\"mb-4\">Login</h3>\n                            <LoginForm />\n                            <p>\n                                Dont have account?{\" \"}\n                                <a role=\"button\" onClick={toggleFormType}>\n                                    {\" \"}\n                                    Sign Up\n                                </a>\n                            </p>\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\nexport default Login;\n","import React from \"react\";\n\nconst Main = () => {\n    return <h1> Main Page</h1>;\n};\n\nexport default Main;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nconst NavBar = () => {\n    return (\n        <ul className=\"nav\">\n            <li className=\"nav-item\">\n                <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">\n                    Main\n                </Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link className=\"nav-link \" aria-current=\"page\" to=\"/login\">\n                    Login\n                </Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link className=\"nav-link \" aria-current=\"page\" to=\"/users\">\n                    Users\n                </Link>\n            </li>\n        </ul>\n    );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Users from \"./layouts/users\";\nimport Login from \"./layouts/login\";\nimport Main from \"./layouts/main\";\nimport NavBar from \"./components/ui/navBar\";\n\nfunction App() {\n    return (\n        <div>\n            <NavBar />\n            <Switch>\n                <Route path=\"/users/:userId?/:edit?\" component={Users} />\n                <Route path=\"/login/:type?\" component={Login} />\n                <Route path=\"/\" exact component={Main} />\n                <Redirect to=\"/\" />\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./app/App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}